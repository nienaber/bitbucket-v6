openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Bitbucket v6'
  description: 'The bitbucket v6 code.'
# Added by API Auto Mocking Plugin
servers:
  - description: Development location
    url: '{server}/rest'
    variables:
      server:
        default: http://localhost
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Tes4637/Bitbucket/1.0.0
 
paths:
  /keys/1.0/projects/{projectKey}/repos/{repositorySlug}/ssh:
    get:
      summary: >
        Retrieves the access keys for the repository identified in the URL.
      operationId: getProjectWithRespositorySshKeys
      parameters:
        - name: projectKey
          in: path
          required: true
          schema:
            type: integer
        - name: repositorySlug
          in: path
          required: true
          schema:
            type:  string
        - name: filter
          in: query
          description: >
            if specified only SSH access keys with a label prefixed with the 
            supplied string will be returned
          required: false
          schema:
            type: string
        - name: effective
          in: query
          description: >
            Controls whether SSH access keys configured at the project level 
            should be included in the results or not. When set to true all keys 
            that have access to the repository (including project level keys) 
            are included in the results. When set to false, only access keys 
            configured for the specified repository are considered. Default is 
            false.
          required: false
          schema:
            type: boolean
        - name: permission
          in: query
          description: >
            if specified only SSH access keys with at least the supplied 
            permission will be returned Default is Permission.REPO_READ.
          required: false
          schema:
            type: string 
      responses:
        "200": 
          description: A page of ssh keys for the repository
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagesOfProjectRepositorySsh"
        "400":
          description: >
            One or more of the required parameters or attributes were missing/incorrectly 
            formatted/inappropriate in the given context
        "401":
          description: >
            TODO
        "404":
          description: >
            TODO
  /ssh/1.0/keys:
    get:
      summary: Retrieve a page of ssh keys.
      operationId: getKeys
      parameters: 
        - name: user
          in: query
          description: >
            the username of the user to retrieve the keys for. If no username 
            is specifie, the ssh keys will be retrieved for the current 
            authenticated user.
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Indicates how many results to return per page.
          required: false
          schema:
            type: integer
            format: int64
        - name: start
          in: query
          description: Record count to start from.
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: "A page of ssh keys"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagesOfSshKeys"
          links:
            GetNextPage:
              description: >
                The `limit` and `start` value returned in the response can be used 
                as the next page to get more keys.
              operationId: getKeys
              parameters:
                limit: $response.body#/limit
                start: $response.body#/nextPageStart
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    Pagination:
      type: object
      properties:
        size:
          type: integer
          format: int64
        limits:
          type: integer
          format: int64
        isLastPage:
          type: boolean
        start:
          type: integer
          format: int64
        nextPageStart:
          type: integer
          format: int64
        values:
          type: array
          items:
            type: string
    PagesOfProjectRepositorySsh:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - type: object
          properties:
            values:
              type: array
              items:
                $ref: "#/components/schemas/ProjectRepositorySsh"
    ProjectRepositorySsh:
      type: object
      properties:
        key:
          $ref: "#/components/schemas/SshKey"
        repository:
          $ref: "#/components/schemas/Repository"
        permission:
          type: string
    Repository:
      type: object
      properties:
        slug:
          type: string
        id:
          type: integer
        name:
          type: string
        scmId:
          type: string
        state:
          type: string
        statusMessage:
          type: string
        forkable:
          type: boolean
        project:
          $ref: "#/components/schemas/Project"
        public:
          type: boolean
        links:
          $ref: "#/components/schemas/Links"
    Links:
      type: object
      properties:
        clone:
          type: array
          items:
            $ref: "#/components/schemas/CloneLink"
        self:
          type: array
          items:
            $ref: "#/components/schemas/Link"
    Link:
      type: object
      properties:
        href:
          type: string
    CloneLink:
      allOf:
        - $ref: "#/components/schemas/Link"
        - type: object
          properties:
            name:
              type: string
    Project:
      type: object
      properties:
        key:
          type: string
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        public:
          type: boolean
        type:
          type: string
        links:
          $ref: "#/components/schemas/Link"
    PagesOfSshKeys:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - type: object
          properties:
            values:
              type: array
              items: 
                $ref: "#/components/schemas/SshKey"
    SshKey:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Id of for the ssh-key
        text:
          type: string
          description: The public key value.
        label:
          type: string
          description: The label given for the ssh-key.
        
security:
  - basicAuth: []